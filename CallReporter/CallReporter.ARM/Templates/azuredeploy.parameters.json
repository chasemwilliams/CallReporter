{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "value": "" // Required value, must be valid service name that will later
      // be deployed as <appName>.azurewebsites.net
    },
    "sqlServerAdminLogin": {
      "value": "" // Required value, must be valid administrator account name ("admin" is invalid)
    },
    "sqlServerAdminPassword": {
      "value": "" // Required value, must meet password strength requirements
    },
    // ------
    // If your app does not require authentication or push notifications, you can stop here and set
    // ApplicationCapabilities.ModeOfOperation to ModeOfOperation.OfflineOnly, deploy, publish, run
    // ------
    "isAuthenticationEnabled": {
      "value": false
    },
    "microsoftAuth": {
      "value": {
        "clientId": "",
        "clientSecret": ""
      }
    },
    "googleAuth": {
      "value": {
        "googleClientId": "",
        "googleClientSecret": ""
      }
    },
    "facebookAuth": {
      "value": {
        "facebookAppId": "",
        "facebookAppSecret": ""
      }
    },
    "twitterAuth": {
      "value": {
        "twitterConsumerKey": "",
        "twitterConsumerSecret": ""
      }
    },
    "aadAuth": {
      "value": {
        "clientId": "",
        "issuer": ""
      }
    },

    // Notification Hub Credentials (for Windows, Google, and Apple push notification services)
    "wnsCredential": {
      "value": {
        "packageSid": "", // If you set this credential you have to uncomment wnsCredential in Notification Hub configuration section
        "secretKey": ""
      }
    },
    "gcmCredential": {
      "value": {
        // Copy the SENDER_ID here ______ and also use it to replace "<product number>" in MainActivities.cs
        "googleApiKey": "" // If you set this credential you have to uncomment gcmCredential in Notification Hub configuration section
      }
    },
    "apnsCredential": {
      // If you set this credential you have to uncomment apnsCredential in Notification Hub configuration section
      "value": {
        // Set apnsCertificate to Apple Push Notification certificate converted to base 64 string.
        // You can convert the certificate a base 64 string by using these two PowerShell commands:
        //     $fileContentBytes = get-content ‘MyPushCert.p12’ -Encoding Byte
        //     [System.Convert]::ToBase64String($fileContentBytes) | Out-File ‘MyPushCertAsBase64String.txt’
        "apnsCertificate": "",
        // Set to the password that was set when the .p12 cert was created on the Mac (via export)
        "certificateKey": "",
        // Should be set to either:
        //     gateway.sandbox.push.apple.com  // for dev cert
        //     gateway.push.apple.com          // for production cert
        "endpoint": ""
      }
    }
  }
}
