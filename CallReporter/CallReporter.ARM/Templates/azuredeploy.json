{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the mobile app that you wish to create."
      }
    },
    "hostingPlanSettings": {
      "type": "object",
      "defaultValue": {
        "tier": "Standard",
        "skuName": "S1",
        "capacity": "0"
      },
      "metadata": {
        "description": "The settings of the existing hosting plan."
      }
    },
    "sqlServerAdminLogin": {
      "type": "string",
      "metadata": {
        "description": "The account name to use for the database server administrator."
      }
    },
    "sqlServerAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password to use for the database server administrator."
      }
    },
    "sqlDatabaseEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "metadata": {
        "description": "The type of database to create. The available options are: Web, Business, Basic, Standard, and Premium."
      }
    },
    "isAuthenticationEnabled": {
      "type": "bool",
      "metadata": {
        "description": "Indicates if authentication should be enabled"
      }
    },
    "sqlDatabaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
      "metadata": {
        "description": "The database collation for governing the proper use of characters."
      }
    },
    "sqlDatabaseMaxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824",
      "metadata": {
        "description": "The maximum size, in bytes, for the database"
      }
    },
    "microsoftAuth": {
      "type": "object",
      "defaultValue": {
        "clientId": null,
        "clientSecret": null
      },
      "metadata": {
        "description": "Microsoft Account authentication settings"
      }
    },
    "aadAuth": {
      "type": "object",
      "defaultValue": {
        "clientId": null,
        "issuer": null
      },
      "metadata": {
        "description": "Azure Active Directory authentication settings"
      }
    },
    "googleAuth": {
      "type": "object",
      "defaultValue": {
        "googleClientId": null,
        "googleClientSecret": null
      },
      "metadata": {
        "description": "Azure Active Directory authentication settings"
      }
    },
    "facebookAuth": {
      "type": "object",
      "defaultValue": {
        "facebookAppId": null,
        "facebookAppSecret": null
      },
      "metadata": {
        "description": "Facebook authentication settings"
      }
    },
    "twitterAuth": {
      "type": "object",
      "defaultValue": {
        "twitterConsumerKey": null,
        "twitterConsumerSecret": null
      },
      "metadata": {
        "description": "Twitter authentication settings"
      }
    },
    "wnsCredential": {
      "type": "object",
      "defaultValue": {
        "packageSid": null,
        "secretKey": null
      },
      "metadata": {
        "description": "Windows Notification Service (WNS) credentials"
      }
    },
    "gcmCredential": {
      "type": "object",
      "defaultValue": {
        "googleApiKey": null
      },
      "metadata": {
        "description": "Google Firebase Cloud Messaging Service (FCM) credentials"
      }
    },
    "apnsCredential": {
      "type": "object",
      "defaultValue": {
        "apnsCertificate": null,
        "certificateKey": null,
        "endpoint": null
      },
      "metadata": {
        "description": "Apple Push Notification Service (APNS) credentials"
      }
    }
  },
  "variables": {
    "uniqueAppName": "[parameters('appName')]",
    "hostingPlanName": "[concat(variables('uniqueAppName'), '-plan')]",
    "databaseServerName": "[concat(tolower(variables('uniqueAppName')), '-sqlserver')]",
    "databaseName": "[concat(tolower(variables('uniqueAppName')), '-sqldb')]",
    "notificationHubNamespace": "[concat(variables('uniqueAppName'), '-namespace')]",
    "notificationHubName": "[concat(variables('uniqueAppName'), '-hub')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('hostingPlanSettings').skuName]",
        "tier": "[parameters('hostingPlanSettings').tier]",
        "capacity": "[parameters('hostingPlanSettings').capacity]"
      },
      "properties": {
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('uniqueAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "mobileapp",
      "properties": {
        "name": "[variables('uniqueAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[variables('hostingPlanName')]",
        "[variables('notificationHubName')]"
      ],
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "connectionstrings",
          "type": "config",
          "dependsOn": [
            "[variables('uniqueAppName')]",
            "[variables('notificationHubName')]",
            "[variables('databaseName')]"
          ],
          "properties": {
            "MS_TableConnectionString": {
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('databaseServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlServerAdminLogin'), '@', variables('databaseServerName'), ';Password=', parameters('sqlServerAdminPassword'), ';')]",
              "type": "SQLServer"
            },
            "MS_NotificationHubConnectionString": {
              "value": "[listkeys(resourceId('Microsoft.NotificationHubs/namespaces/notificationHubs/authorizationRules', variables('notificationHubNamespace'), variables('notificationHubName'), 'DefaultFullSharedAccessSignature'), '2014-09-01').primaryConnectionString]",
              "type": "Custom"
            }
          }
        },
        {
          "name": "authsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[variables('uniqueAppName')]"
          ],
          "properties": {
            // Set general auth settings
            "enabled": "[parameters('isAuthenticationEnabled')]",
            "unauthenticatedClientAction": 0,
            "tokenStoreEnabled": true,
            "defaultProvider": 0,

            // Azure Active Directory
            "clientId": "[parameters('aadAuth').clientId]",
            "issuer": "[parameters('aadAuth').issuer]",

            // Google
            "googleClientId": "[parameters('googleAuth').googleClientId]",
            "googleClientSecret": "[parameters('googleAuth').googleClientSecret]",

            // Facebook
            "facebookAppId": "[parameters('facebookAuth').facebookAppId]",
            "facebookAppSecret": "[parameters('facebookAuth').facebookAppSecret]",

            // Twitter
            "twitterConsumerKey": "[parameters('twitterAuth').twitterConsumerKey]",
            "twitterConsumerSecret": "[parameters('twitterAuth').twitterConsumerSecret]",

            // Microsoft Account
            "microsoftAccountClientId": "[parameters('microsoftAuth').clientId]",
            "microsoftAccountClientSecret": "[parameters('microsoftAuth').clientSecret]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[variables('uniqueAppName')]",
            "[variables('notificationHubName')]"
          ],
          "properties": {
            "MS_MobileServiceName": "[variables('uniqueAppName')]",
            "MS_NotificationHubName": "[variables('notificationHubName')]"
          }
        },
        {
          "apiVersion": "2015-01-01",
          "type": "providers/links",
          "name": "Microsoft.Resources/SiteToHub",
          "dependsOn": [
            "[variables('uniqueAppName')]",
            "[variables('notificationHubName')]"
          ],
          "properties": {
            "targetId": "[resourceId('Microsoft.NotificationHubs/namespaces/NotificationHubs', variables('notificationHubNamespace'), variables('notificationHubName'))]"
          }
        }
      ]
    },
    {
      "name": "[variables('databaseServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [ "[variables('databaseServerName')]" ],
          "properties": {
            "edition": "[parameters('sqlDatabaseEdition')]",
            "collation": "[parameters('sqlDatabaseCollation')]",
            "maxSizeBytes": "[parameters('sqlDatabaseMaxSizeBytes')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [ "[variables('databaseServerName')]" ],
          "location": "[resourceGroup().location]",
          "name": "open",
          "properties": {
            "endIpAddress": "255.255.255.255",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "apiVersion": "2014-09-01",
      "type": "Microsoft.NotificationHubs/namespaces",
      "name": "[variables('notificationHubNamespace')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "region": "[resourceGroup().location]",
        "namespaceType": "NotificationHub"
      }
    },
    {
      "apiVersion": "2014-09-01",
      "name": "[concat(variables('notificationHubNamespace'), '/', variables('notificationHubName'))]",
      "type": "Microsoft.NotificationHubs/namespaces/notificationHubs",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.NotificationHubs/namespaces', variables('notificationHubNamespace'))]"

      ],
      "properties": {
        //// Uncomment the service credentials when you have the actual credentials for that
        //// service.  The deployment will fail if you uncomment and leave credentials blank
        //// or provide invalid credentials with an error that probably say "Bad Request"
        //"wnsCredential": {
        //  "properties": {
        //    "packageSid": "[parameters('wnsCredential').packageSid]",
        //    "secretKey": "[parameters('wnsCredential').secretKey]"
        //  }
        //},
        //"gcmCredential": {
        //  "properties": {
        //    "googleApiKey": "[parameters('gcmCredential').googleApiKey]"
        //  }
        //},
        //"apnsCredential": {
        //  "properties": {
        //    "apnsCertificate": "[parameters('apnsCredential').apnsCertificate]",
        //    "certificateKey": "[parameters('apnsCredential').certificateKey]",
        //    "endpoint": "[parameters('apnsCredential').endpoint]"
        //  }
        //}
      }
    }
  ]
}